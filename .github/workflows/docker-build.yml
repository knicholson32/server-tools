name: ci

on:
  push:
    branches:
      - "main"
      - "develop"
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - linux/ppc64le
    steps:
      - name: Set platform    
        run: |
          echo platform_short=`echo "${platform}" | sed 's:.*/::'` >> $GITHUB_ENV
        env:
          platform: ${{ matrix.platform }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ vars.REGISTRY_IMAGE }}
            ghcr.io/knicholson32/server-tools
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform }}
          build-args: |
            GIT_COMMIT=${{ github.sha }}
            GIT_REF=${{ github.ref_name }}
            GIT_REF_PROTECTED=${{ github.ref_protected }}
            REGISTRY_IMAGE=${{ vars.REGISTRY_IMAGE }}
            CI=true
          file: docker/Dockerfile
          target: prod
          outputs: |
            type=image,name=${{ vars.REGISTRY_IMAGE }},push-by-digest=false,name-canonical=true
            type=image,name=ghcr.io/knicholson32/server-tools,push-by-digest=false,name-canonical=true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=registry,ref=${{ vars.CACHE_REGISTRY_IMAGE }}:buildcache_${{ env.platform_short }}
          cache-to: type=registry,ref=${{ vars.CACHE_REGISTRY_IMAGE }}:buildcache_${{ env.platform_short }},mode=max
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"          
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.platform_short }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - build
    steps:
      - name: Download digests - amd64
        uses: actions/download-artifact@v4
        with:
          name: digests-amd64
          path: /tmp/digests
      - name: Download digests - arm64
        uses: actions/download-artifact@v4
        with:
          name: digests-arm64
          path: /tmp/digests
      - name: Download digests - ppc64le
        uses: actions/download-artifact@v4
        with:
          name: digests-ppc64le
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ vars.REGISTRY_IMAGE }}
            ghcr.io/knicholson32/server-tools
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ vars.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect image Docker Hub
        run: |
          docker buildx imagetools inspect ${{ vars.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}